[개발환경]
- spring boot
- gradle
- rest api
- jpa
- json + mybatis
------------------------------------------------------------------------------
[개발노트]
1. 제너릭을 사용하는 이유 ex) ResponseEntity<List>
- 컴파일 시 강한 타입체크를 할 수 있다 : 실행시 타입 에러가 나는 것보단 컴파일시 미리 타입을 강하게 체크해서 에러를 사전에 확인
- 타입변환을 제거할 수 있다 : 타입 변환이 많이 생길수록 전체 애플리케이션 성능이 떨어지는데 이를 줄일 수 있다. ex) List

2. LOG 사용법 trace, debug, info, warn, error
if (log.isTraceEnabled()) {
log.trace("trace");
}
log.debug("debug");
log.info"info");
log.warn("warn");
log.error("error");

3. Map 대신 mybatis에서 사용할 모델객체 별도 구현.

4. @Autowired, @Qualifier, @Resource(name = "PlaylistMapper") 사용하지 않고, @RequiredArgsConstructor를 사용하는 이유
=> final을 사용하여 메소드명, 객체명, 변수명 등을 중복 사용하여 잘 못 바인딩 되는 것을 막기 위해

5. 예외 처리 
- Validation
- @ControllerAdvice
- @ExceptionHandler

6. 기타
- MSA